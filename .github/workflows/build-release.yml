name: Build Release

on:
  push:
    tags:
      - "v*"
  
permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    uses: ./.github/workflows/publish.yml

  release:
    needs: [publish, build-linux, build-windows, build-docker]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # publish docker
    - name: Install cosign
      uses: sigstore/cosign-installer@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ needs.build-docker.outputs.tags }}
        labels: ${{ needs.build-docker.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      env:
        TAGS: ${{ needs.build-docker.outputs.tags }}
        DIGEST: ${{ needs.build-docker.outputs.digest }}
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # create release
    - run: tar -czf mssql-proxy-${{ github.ref_name }}-source.tar.gz Tools/mssql-proxy
    - uses: actions/download-artifact@v4
      with:
        pattern: build-*
        path: ./
        merge-multiple: true
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          mssql-proxy-${{ github.ref_name }}-source.tar.gz
          mssql-proxy-${{ github.ref_name }}-linux.tar.gz
          mssql-proxy-${{ github.ref_name }}-windows.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11.4
    - run: pip install -r Tools/mssql-proxy/requirements.txt pyinstaller
    - run: pyinstaller --onefile mssql-proxy.py
      working-directory: Tools/mssql-proxy
    - run: tar -czf mssql-proxy-${{ github.ref_name }}-linux.tar.gz Tools/mssql-proxy/dist
    - uses: actions/upload-artifact@v4
      with:
        name: build-linux
        path: mssql-proxy-${{ github.ref_name }}-linux.tar.gz
   
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11.4
    - run: pip install -r Tools/mssql-proxy/requirements.txt pyinstaller
    - run: pyinstaller --onefile mssql-proxy.py
      working-directory: Tools/mssql-proxy
    - run: tar -a -c -f mssql-proxy-${{ github.ref_name }}-windows.zip Tools/mssql-proxy/dist
    - uses: actions/upload-artifact@v4
      with:
        name: build-windows
        path: mssql-proxy-${{ github.ref_name }}-windows.zip

  # build-macos:

  build-docker:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
